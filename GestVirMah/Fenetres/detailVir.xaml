<Controls:MetroWindow
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:ee="http://schemas.microsoft.com/expression/2010/effects" xmlns:Custom="http://metro.mahapps.com/winfx/xaml/shared" mc:Ignorable="d" x:Class="GestVirMah.detailVir"
        Title="Détails du virement" Height="440.332" Width="499.298" Loaded="MetroWindow_Loaded"
        ResizeMode="NoResize" WindowStartupLocation="CenterOwner"
        GlowBrush="{DynamicResource AccentColorBrush}" BorderThickness="2"  BorderBrush="#FF119EDA" FontSize="13.333" ShowInTaskbar="False">
    <Controls:MetroWindow.Resources>
        <Style x:Key="TextBoxLabelStyle" TargetType="{x:Type TextBox}">
            <Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}"/>
            <Setter Property="Controls:TextBoxHelper.IsMonitoring" Value="True"/>
            <Setter Property="Controls:ControlsHelper.ButtonWidth" Value="22"/>
            <Setter Property="SelectionBrush" Value="{DynamicResource HighlightBrush}"/>
            <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
            <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="MinHeight" Value="26"/>
            <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
            <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}"/>
            <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
            <Setter Property="CaretBrush" Value="{DynamicResource BlackBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="enterGotFocus">
                                <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="exitGotFocus">
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="enterHasText">
                                <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="exitHasText">
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid>
                            <Rectangle x:Name="Base" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}">
                                <Rectangle.StrokeThickness>
                                    <TemplateBinding Property="BorderThickness">
                                        <TemplateBinding.Converter>
                                            <Custom:ThicknessToDoubleConverter/>
                                        </TemplateBinding.Converter>
                                    </TemplateBinding>
                                </Rectangle.StrokeThickness>
                            </Rectangle>
                            <Rectangle x:Name="FocusRectangle" Visibility="Collapsed">
                                <Rectangle.StrokeThickness>
                                    <TemplateBinding Property="BorderThickness">
                                        <TemplateBinding.Converter>
                                            <Custom:ThicknessToDoubleConverter/>
                                        </TemplateBinding.Converter>
                                    </TemplateBinding>
                                </Rectangle.StrokeThickness>
                            </Rectangle>
                            <Grid x:Name="PART_InnerGrid" Margin="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition x:Name="ButtonColumn" Width="{Binding (Controls:ControlsHelper.ButtonWidth), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition x:Name="ButtonRow" Height="*"/>
                                </Grid.RowDefinitions>
                                <Border x:Name="ReadOnlyVisualElement" Background="{x:Null}" Grid.ColumnSpan="2" Opacity="0" Grid.Row="1"/>
                                <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" Grid.Column="0" IsTabStop="False" Margin="2" Grid.Row="1" VerticalAlignment="Stretch"/>
                                <TextBlock x:Name="Message" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="6,2" Opacity="0.6" Padding="{TemplateBinding Padding}" Grid.Row="1" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Grid x:Name="FloatingMessageContainer" Grid.ColumnSpan="2" Grid.Column="0" Height="0" IsHitTestVisible="False" Margin="5,0" Visibility="Visible">
                                    <TextBlock x:Name="FloatingMessage" Foreground="{TemplateBinding Foreground}" FontSize="{DynamicResource FloatingWatermarkFontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Opacity="0.6" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <TextBlock.RenderTransform>
                                            <TranslateTransform/>
                                        </TextBlock.RenderTransform>
                                    </TextBlock>
                                </Grid>
                                <Button x:Name="PART_ClearText" Content="{Binding (Controls:TextBoxHelper.ButtonContent), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontSize="16" FontFamily="{Binding (Controls:TextBoxHelper.ButtonFontFamily), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}">
                                    <Button.Visibility>
                                        <Binding Mode="OneWay" Path="(Controls:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <BooleanToVisibilityConverter/>
                                            </Binding.Converter>
                                        </Binding>
                                    </Button.Visibility>
                                </Button>
                            </Grid>
                            <Rectangle x:Name="DisabledVisualElement" Fill="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" Stroke="{DynamicResource ControlsDisabledBrush}">
                                <Rectangle.StrokeThickness>
                                    <TemplateBinding Property="BorderThickness">
                                        <TemplateBinding.Converter>
                                            <Custom:ThicknessToDoubleConverter/>
                                        </TemplateBinding.Converter>
                                    </TemplateBinding>
                                </Rectangle.StrokeThickness>
                            </Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                                <Setter Property="Visibility" TargetName="Message" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding (Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="False">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                            <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding (Controls:TextBoxHelper.Watermark), RelativeSource={RelativeSource Self}}" Value="">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                            <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding (Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="False">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                            <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="TextWrapping" Value="NoWrap"/>
                                    <Condition Property="AcceptsReturn" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Width" TargetName="ButtonColumn" Value="{Binding ActualHeight, ElementName=ButtonRow, Mode=OneWay}"/>
                            </MultiTrigger>
                            <DataTrigger Binding="{Binding (Controls:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False">
                                <Setter Property="Grid.ColumnSpan" TargetName="PART_ContentHost" Value="2"/>
                                <Setter Property="Grid.ColumnSpan" TargetName="Message" Value="2"/>
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.6"/>
                            </Trigger>
                            <Trigger Property="IsReadOnly" Value="True">
                                <Setter Property="Opacity" TargetName="ReadOnlyVisualElement" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Foreground" TargetName="FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
                                <Setter Property="Opacity" TargetName="FloatingMessage" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True"/>
                            <Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True"/>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Controls:TextBoxHelper.HasText" Value="False"/>
                                    <Condition Property="IsFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation AutoReverse="True" Duration="0:0:2" From="0" RepeatBehavior="Forever" To="1" Storyboard.TargetProperty="(Effect).Opacity" Storyboard.TargetName="Base"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Setter Property="Effect" TargetName="Base">
                                    <Setter.Value>
                                        <DropShadowEffect BlurRadius="10" Color="{DynamicResource BlackColor}" Opacity="0" ShadowDepth="0"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="False">
                                <Setter Property="Effect" TargetName="Base" Value="{x:Null}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Controls:MetroWindow.Resources>
    <Controls:MetroWindow.Background>
        <ImageBrush ImageSource="/GestVirMah;component/Images/plain-white-wallpaper.jpg"/>
    </Controls:MetroWindow.Background>
    <Grid>
        <Label x:Name="label17" Content="" HorizontalAlignment="Left" VerticalAlignment="Top" Width="99.495" Margin="89.327,83.2,0,0" MaxWidth="169" Visibility="Hidden"/>

        <Rectangle Fill="White" HorizontalAlignment="Left" Height="205.925" Margin="9,136.533,0,0" Stroke="Gray" VerticalAlignment="Top" Width="480.298"/>
        <Rectangle Fill="White" HorizontalAlignment="Left" Height="104.308" Margin="9,18.225,0,0" Stroke="Gray" VerticalAlignment="Top" Width="480.298"/>

        <Label x:Name="label19" Content="" HorizontalAlignment="Left" VerticalAlignment="Top" Width="67.21" Margin="121.612,367.458,0,0" Visibility="Hidden" Grid.Column="1"/>

        <Label x:Name="label24" Content="" HorizontalAlignment="Left" Margin="308.101,45.959,0,0" VerticalAlignment="Top" Width="24.749" Visibility="Hidden" Grid.Column="1"/>
        <Label x:Name="label26" Content="" HorizontalAlignment="Left" Margin="295.108,18.225,0,0" VerticalAlignment="Top" Width="31.19" FontSize="13.333" Visibility="Hidden" Grid.Column="1"/>
        <Button x:Name="_btn" HorizontalAlignment="Right" Margin="0,0,10,13.141" VerticalAlignment="Bottom" BorderBrush="#FF1C79D6" Cursor="Hand" BorderThickness="1" Padding="10,2" RenderTransformOrigin="0.5,0.5" IsCancel="True" VerticalContentAlignment="Center" Click="fermer_Click" IsDefault="True">
            <Button.Background>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="1.0"/>
                </LinearGradientBrush>
            </Button.Background>
            <WrapPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <Rectangle Fill="Black" HorizontalAlignment="Center" Height="18" VerticalAlignment="Center" Width="14">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_close}"/>
                    </Rectangle.OpacityMask>
                </Rectangle>
                <Label Content="Fermer" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="12" Margin="5,0,0,0" FontFamily="/GestVirMah;component/Fonts/#Century Gothic"/>
            </WrapPanel>
        </Button>
        <WrapPanel HorizontalAlignment="Left" Height="196.925" VerticalAlignment="Top" Width="479.298" Margin="10,136.533,0,0">
            <WrapPanel HorizontalAlignment="Left" VerticalAlignment="Top" Width="216.649">
                <Label x:Name="label20" Content="Date :" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="SemiBold"/>
                <Label x:Name="label28" Content="" HorizontalAlignment="Left" VerticalAlignment="Top" Width="140" Margin="0"/>
                <Label x:Name="label6" Content="Code :" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="SemiBold"/>
                <Label x:Name="label16" Content="" HorizontalAlignment="Left" VerticalAlignment="Top" Width="140" Margin="0"/>
                <Label x:Name="label13" Content="Chèque :" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="SemiBold"/>
                <Label x:Name="label23" Content="" HorizontalAlignment="Left" VerticalAlignment="Top" Width="140" Margin="0"/>
                <Label x:Name="label9" Content="Montant :" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="SemiBold"/>
                <Label x:Name="label18" Content="" HorizontalAlignment="Left" VerticalAlignment="Top" Width="140" Margin="0"/>
                <Label x:Name="label3" Content="Utilisateur :" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="SemiBold"/>
                <Label x:Name="label25" Content="" HorizontalAlignment="Left" VerticalAlignment="Top" Width="135" Margin="0"/>
            </WrapPanel>
            <WrapPanel HorizontalAlignment="Left" VerticalAlignment="Top" Width="258.649">
                <Label x:Name="label14" Content="Date création :" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0" FontWeight="SemiBold"/>
                <Label x:Name="label27" Content="" HorizontalAlignment="Left" VerticalAlignment="Top" Width="140" Margin="0"/>
                <Label x:Name="label4" Content="PV associé :" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0" FontWeight="SemiBold"/>
                <Label x:Name="label29" Content="" HorizontalAlignment="Left" VerticalAlignment="Top" Width="140" Margin="0"/>
                <Label x:Name="label5" Content="Date du chèque : " HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0" FontWeight="SemiBold"/>
                <Label x:Name="label22" Content="" HorizontalAlignment="Left" VerticalAlignment="Top" Width="135" Margin="0"/>
                <Label x:Name="label11" Content="Bénificiaires :" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="SemiBold"/>
                <TextBox HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" Width="169" Background="{x:Null}" BorderBrush="{x:Null}" CaretBrush="{x:Null}" SelectionBrush="{x:Null}" IsReadOnly="True" Text="{Binding Content, ElementName=label17}" FontSize="13.333" Style="{DynamicResource TextBoxLabelStyle}"/>
            </WrapPanel>
            <Label x:Name="label10" Content="Observation :" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,8,0,0" FontWeight="SemiBold"/>
            <TextBox HorizontalAlignment="Left" VerticalAlignment="Top" Width="381.574" Text="{Binding Content, ElementName=label19}" FontSize="13.333" IsReadOnly="True" HorizontalScrollBarVisibility="Auto" Margin="0,8,0,0"/>
        </WrapPanel>
        <WrapPanel HorizontalAlignment="Left" Margin="10,26.571,0,0" VerticalAlignment="Top" Width="479.298">
            <Label x:Name="label15" Content="Ministère :" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="SemiBold"/>
            <TextBox HorizontalAlignment="Left" VerticalAlignment="Top" Width="385" Text="{Binding Content, ElementName=label26}" FontSize="13.333" IsReadOnly="True" HorizontalScrollBarVisibility="Auto" Margin="13,0,0,0"/>
            <Label x:Name="label2" Content="Organisme : " HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,5,0,0" FontWeight="SemiBold"/>
            <TextBox HorizontalAlignment="Left" VerticalAlignment="Top" Width="385" Text="{Binding Content, ElementName=label24}" FontSize="13.333" IsReadOnly="True" HorizontalScrollBarVisibility="Auto" Margin="0,5,0,0"/>
        </WrapPanel>

    </Grid>
</Controls:MetroWindow>
